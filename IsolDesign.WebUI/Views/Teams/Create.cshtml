@model IsolDesign.WebUI.Models.CreateTeamViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create A Team</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Team.TeamId)

    <div class="form-horizontal">
        <hr /><br />
        
        <div class="form-group">
            @Html.LabelFor(model => model.Team.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Team.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Team.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Assign Team to Project", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    var selectList = new SelectList(Model.Projects, "ProjectId", "Name");
                }
                @Html.DropDownListFor(model => model.Team.ProjectId, selectList, "Choose Project", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Choose Team members", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div style="height:200px; overflow:auto;">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Partner.Name)</th>
                                <th>@Html.DisplayNameFor(model => model.Partner.City)</th>
                                <th>@Html.DisplayNameFor(model => model.Partner.Country)</th>
                                <th>@Html.DisplayNameFor(model => model.Partner.Competencies)</th>
                                <th>Select Partner</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                foreach (var partner in Model.Partners)
                                {
                                    var competencies = "";
                                    foreach (var competency in partner.Competencies)
                                    {
                                        competencies += competency.Name + ", ";
                                    }
                                    <tr>
                                        <td>@partner.Name</td>
                                        <td>@partner.City</td>
                                        <td>@partner.Country</td>
                                        <td>@competencies</td>
                                        <td><input type="checkbox" name="partnerIds" value="@partner.PartnerId" /></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}






@*<div class="form-group">
        @Html.Label("Assign Team to Project", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Team.ProjectId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Team.ProjectId, "", new { @class = "text-danger" })
        </div>
    </div>*@




@*<div class="form-group">
    @Html.Label("Assign Team to Project", htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @{
            var selectList = new SelectList(Model.Projects, "ProjectId", "Name");
        }
        @Html.DropDownListFor(model => model.Team.ProjectId, selectList, "Default label", new { @class = "css-class" })
    </div>
</div>*@

