@model IsolDesign.WebUI.Models.CreateApplicantViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Apply for Partnership with Isol Design</h2>

<div id="instructionsButton" class="btn btn-sm btn-default">Instructions</div>

<div id="instructions" class="hide">
    <h4>
        Please fill out the form below.<br />
        We need a personal description and two projects from your portfolio.<br /><br />
        The form consist of three sections:<br /><br />
        Section 1: input fields for your personal information like name, address, contact-info etc.<br /><br />
        Section 2: input fields for a project from your portfolio.<br /><br />
        Section 3: input fields for a second project you have worked on.<br /><br />
        All fields are required. Thank you for applying!
    </h4>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", @id = "myForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Upload Photo of applicant -->
        <div class="form-group">
            <label class="control-label col-md-2">Profile Image</label>
            <!-- The name="image" attribute must match the parameter name in the post action-method for model binding to work -->
            <div class="col-md-10">
                <input type="file" data-val="true" data-val-required="The Profile Image field is required (Maximum file size 1 MB)" name="profileImage" class="form-control" />
                @*<input type="file" name="profileImage" class="form-control" />*@
                @*<input type="file" data-val="true" data-val-required="please select a file" name="file" />*@
                @Html.ValidationMessage("profileImage", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ApplicantModel.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.SkypeLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.SkypeLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.SkypeLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Facebook, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.Facebook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Facebook, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.LinkedIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.LinkedIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.LinkedIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicantModel.Homepage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicantModel.Homepage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicantModel.Homepage, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Competencies, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table class="table table-bordered">
                    <tr>
                        <th>Competency</th>
                        <th>Description</th>
                        <th></th>
                    </tr>
                    @{
                        foreach (var competency in Model.Competencies)
                        {
                            <tr>
                                <td>
                                    @competency.Name
                                </td>
                                <td>
                                    @competency.Description
                                </td>
                                <td>
                                    <input type="checkbox" name="competencyIds" value="@competency.CompetencyId" />
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div>


        <!-- ************************ Input elements for first project in portfolio ******************************* -->
        <h2 class="projectHeader">Please add your first project from your portfolio</h2>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.PortfolioSubject1.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PortfolioSubject1.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PortfolioSubject1.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PortfolioSubject1.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PortfolioSubject1.Date, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PortfolioSubject1.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PortfolioSubject1.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.PortfolioSubject1.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PortfolioSubject1.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Upload Image -->
            <div class="form-group">
                <label class="control-label col-md-2">Photo of project</label>
                <!-- The name="image" attribute must match the parameter name in the post action-method for model binding to work -->
                <div class="col-md-10">
                    <input type="file" name="port1Image1" class="form-control" />
                </div>
            </div>

            <!-- Upload Image -->
            <div class="form-group">
                <label class="control-label col-md-2">Photo of project</label>
                <!-- The name="image" attribute must match the parameter name in the post action-method for model binding to work -->
                <div class="col-md-10">
                    <input type="file" name="port1Image2" class="form-control" />
                </div>
            </div>

            <!-- Upload Image -->
            <div class="form-group">
                <label class="control-label col-md-2">Photo of project</label>
                <!-- The name="image" attribute must match the parameter name in the post action-method for model binding to work -->
                <div class="col-md-10">
                    <input type="file" name="port1Image3" class="form-control" />
                </div>
            </div>
        </div>


        <!-- ************************ Input elements for the Second project in portfolio ******************************* -->

        <h2 class="projectHeader">Please add your second project from your portfolio</h2>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.PortfolioSubject2.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PortfolioSubject2.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PortfolioSubject2.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PortfolioSubject2.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PortfolioSubject2.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PortfolioSubject2.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PortfolioSubject2.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.PortfolioSubject2.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PortfolioSubject2.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Upload Image -->
            <div class="form-group">
                <label class="control-label col-md-2">Photo of project</label>
                <!-- The name="image" attribute must match the parameter name in the post action-method for model binding to work -->
                <div class="col-md-10">
                    <input type="file" name="port2Image1" class="form-control" />
                </div>
            </div>

            <!-- Upload Image -->
            <div class="form-group">
                <label class="control-label col-md-2">Photo of project</label>
                <!-- The name="image" attribute must match the parameter name in the post action-method for model binding to work -->
                <div class="col-md-10">
                    <input type="file" name="port2Image2" class="form-control" />
                </div>
            </div>

            <!-- Upload Image -->
            <div class="form-group">
                <label class="control-label col-md-2">Photo of project</label>
                <!-- The name="image" attribute must match the parameter name in the post action-method for model binding to work -->
                <div class="col-md-10">
                    <input type="file" name="port2Image3" class="form-control" />
                </div>
            </div>
        </div>

        <div class="form-group" id="submitButton">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send your application" class="btn btn-lg btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@section ToggleInstructions {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#instructionsButton").click(function () {
                $("#instructions").toggleClass('show');
            });
        });
    </script>

}

@section ScriptForDatePicker {
    <script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            (function () {
                var elem = document.createElement('input');
                elem.setAttribute('type', 'date');

                if (elem.type === 'text') {
                    $('#PortfolioSubject1_Date').datepicker();
                    $('#PortfolioSubject2_Date').datepicker();
                }
            })();
        });
    </script>
}

